using System.Data.Entity;
using System.Linq;
using System.Net;
using System.Web.Mvc;
using Project_WebDuLich.Models;

namespace Project_WebDuLich.Areas.Admin.Controllers
{
    public class AdminNewsController : Controller
    {
        private DatabaseTours db = new DatabaseTours();

        public ActionResult Index()
        {
            var news = db.News.Include(n => n.Tour);
            return View(news.ToList());
        }

        public ActionResult Details(int? id)
        {
            if (id == null) return new HttpStatusCodeResult(HttpStatusCode.BadRequest);

            var news = db.News.Include(n => n.Tour).FirstOrDefault(n => n.NewsID == id);
            if (news == null) return HttpNotFound();

            return View(news);
        }

        public ActionResult Create()
        {
            ViewBag.TourID = new SelectList(db.Tours, "TourID", "TourName");
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create(News news)
        {
            if (ModelState.IsValid)
            {
                news.CreatedDate = System.DateTime.Now;
                db.News.Add(news);
                db.SaveChanges();
                return RedirectToAction("Index");
            }
            ViewBag.TourID = new SelectList(db.Tours, "TourID", "TourName", news.TourID);
            return View(news);
        }

        public ActionResult Edit(int? id)
        {
            if (id == null) return new HttpStatusCodeResult(HttpStatusCode.BadRequest);

            var news = db.News.Find(id);
            if (news == null) return HttpNotFound();

            ViewBag.TourID = new SelectList(db.Tours, "TourID", "TourName", news.TourID);
            return View(news);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit(News news)
        {
            if (ModelState.IsValid)
            {
                db.Entry(news).State = EntityState.Modified;
                db.SaveChanges();
                return RedirectToAction("Index");
            }

            ViewBag.TourID = new SelectList(db.Tours, "TourID", "TourName", news.TourID);
            return View(news);
        }

        public ActionResult Delete(int? id)
        {
            if (id == null) return new HttpStatusCodeResult(HttpStatusCode.BadRequest);

            var news = db.News.Find(id);
            if (news == null) return HttpNotFound();

            return View(news);
        }

        [HttpPost, ActionName("Delete")]
        [ValidateAntiForgeryToken]
        public ActionResult DeleteConfirmed(int id)
        {
            var news = db.News.Find(id);
            db.News.Remove(news);
            db.SaveChanges();
            return RedirectToAction("Index");
        }
    }
}
